require 'spec_helper'
require 'json'

# Unit tests for Phrase::AuthorizationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'AuthorizationsApi' do
  before do
    # run before each test
    @api_instance = Phrase::AuthorizationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuthorizationsApi' do
    it 'should create an instance of AuthorizationsApi' do
      expect(@api_instance).to be_instance_of(Phrase::AuthorizationsApi)
    end
  end

  # unit tests for authorization_create
  # Create an authorization
  # Create a new authorization.
  # @param authorization_create_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [AuthorizationWithToken]
  describe 'authorization_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authorization_delete
  # Delete an authorization
  # Delete an existing authorization. API calls using that token will stop working.
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [nil]
  describe 'authorization_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authorization_show
  # Get a single authorization
  # Get details on a single authorization.
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Authorization]
  describe 'authorization_show test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authorization_update
  # Update an authorization
  # Update an existing authorization.
  # @param id ID
  # @param authorization_update_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Authorization]
  describe 'authorization_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for authorizations_list
  # List authorizations
  # List all your authorizations.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :per_page Limit on the number of objects to be returned, between 1 and 100. 25 by default
  # @return [Array<Authorization>]
  describe 'authorizations_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
