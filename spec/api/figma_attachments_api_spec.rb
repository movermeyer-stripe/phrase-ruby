require 'spec_helper'
require 'json'

# Unit tests for Phrase::FigmaAttachmentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FigmaAttachmentsApi' do
  before do
    # run before each test
    @api_instance = Phrase::FigmaAttachmentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FigmaAttachmentsApi' do
    it 'should create an instance of FigmaAttachmentsApi' do
      expect(@api_instance).to be_instance_of(Phrase::FigmaAttachmentsApi)
    end
  end

  # unit tests for figma_attachment_create
  # Create a Figma attachment
  # Create a new Figma attachment.
  # @param project_id Project ID
  # @param figma_attachment_create_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch specify the branch to use
  # @return [FigmaAttachment]
  describe 'figma_attachment_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for figma_attachment_delete
  # Delete a Figma attachment
  # Delete an existing Figma attachment.
  # @param project_id Project ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch specify the branch to use
  # @return [nil]
  describe 'figma_attachment_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for figma_attachment_show
  # Get a single Figma attachment
  # Get details on a single Figma attachment for a given project.
  # @param project_id Project ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch specify the branch to use
  # @return [FigmaAttachment]
  describe 'figma_attachment_show test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for figma_attachment_update
  # Update a Figma attachment
  # Update an existing Figma attachment.
  # @param project_id Project ID
  # @param id ID
  # @param figma_attachment_update_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :branch specify the branch to use
  # @return [FigmaAttachment]
  describe 'figma_attachment_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for figma_attachments_list
  # List Figma attachments
  # List all Figma attachments for the given project
  # @param project_id Project ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :per_page Limit on the number of objects to be returned, between 1 and 100. 25 by default
  # @option opts [String] :branch specify the branch to use
  # @return [Array<FigmaAttachment>]
  describe 'figma_attachments_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
