require 'spec_helper'
require 'json'

# Unit tests for Phrase::GitLabSyncApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GitLabSyncApi' do
  before do
    # run before each test
    @api_instance = Phrase::GitLabSyncApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GitLabSyncApi' do
    it 'should create an instance of GitLabSyncApi' do
      expect(@api_instance).to be_instance_of(Phrase::GitLabSyncApi)
    end
  end

  # unit tests for gitlab_sync_delete
  # Delete single Sync Setting
  # Deletes a single GitLab Sync Setting.
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :account_id Account ID to specify the actual account the GitLab Sync should be created in. Required if the requesting user is a member of multiple accounts.
  # @return [nil]
  describe 'gitlab_sync_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for gitlab_sync_export
  # Export from Phrase Strings to GitLab
  # Export translations from Phrase Strings to GitLab according to the .phraseapp.yml file within the GitLab repository. &lt;br&gt;&lt;br&gt;&lt;i&gt;Note: Export is done asynchronously and may take several seconds depending on the project size.&lt;/i&gt;
  # @param gitlab_sync_id Gitlab Sync ID
  # @param gitlab_sync_export_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [GitlabSyncExport]
  describe 'gitlab_sync_export test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for gitlab_sync_history
  # History of single Sync Setting
  # List history for a single Sync Setting.
  # @param gitlab_sync_id Gitlab Sync ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :per_page Limit on the number of objects to be returned, between 1 and 100. 25 by default
  # @option opts [String] :account_id Account ID to specify the actual account the GitLab Sync should be created in. Required if the requesting user is a member of multiple accounts.
  # @return [Array<GitlabSyncHistory>]
  describe 'gitlab_sync_history test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for gitlab_sync_import
  # Import from GitLab to Phrase
  # Import translations from GitLab to Phrase Strings according to the .phraseapp.yml file within the GitLab repository. &lt;br&gt;&lt;br&gt;&lt;i&gt;Note: Import is done asynchronously and may take several seconds depending on the project size.&lt;/i&gt;
  # @param gitlab_sync_id Gitlab Sync ID
  # @param gitlab_sync_import_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Array<Upload>]
  describe 'gitlab_sync_import test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for gitlab_sync_list
  # List GitLab syncs
  # List all GitLab Sync Settings for which synchronisation with Phrase Strings and GitLab is activated.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :account_id Account ID to specify the actual account the GitLab Sync should be created in. Required if the requesting user is a member of multiple accounts.
  # @return [Array<GitlabSync>]
  describe 'gitlab_sync_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for gitlab_sync_show
  # Get single Sync Setting
  # Shows a single GitLab Sync Setting.
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :account_id Account ID to specify the actual account the GitLab Sync should be created in. Required if the requesting user is a member of multiple accounts.
  # @return [GitlabSync]
  describe 'gitlab_sync_show test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for gitlab_sync_update
  # Update single Sync Setting
  # Updates a single GitLab Sync Setting.
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [String] :account_id Account ID to specify the actual account the GitLab Sync should be created in. Required if the requesting user is a member of multiple accounts.
  # @option opts [String] :phrase_project_code Code of the related Phrase Strings Project.
  # @option opts [Integer] :gitlab_project_id ID of the related GitLab Project.
  # @option opts [String] :gitlab_branch_name Name of the GitLab Branch.
  # @return [GitlabSync]
  describe 'gitlab_sync_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
