require 'spec_helper'
require 'json'

# Unit tests for Phrase::GlossaryTermTranslationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GlossaryTermTranslationsApi' do
  before do
    # run before each test
    @api_instance = Phrase::GlossaryTermTranslationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GlossaryTermTranslationsApi' do
    it 'should create an instance of GlossaryTermTranslationsApi' do
      expect(@api_instance).to be_instance_of(Phrase::GlossaryTermTranslationsApi)
    end
  end

  # unit tests for glossary_term_translation_create
  # Create a translation for a term
  # Create a new translation for a term in a term base (previously: glossary).
  # @param account_id Account ID
  # @param glossary_id Glossary ID
  # @param term_id Term ID
  # @param glossary_term_translation_create_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [GlossaryTermTranslation]
  describe 'glossary_term_translation_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for glossary_term_translation_delete
  # Delete a translation for a term
  # Delete an existing translation of a term in a term base (previously: glossary).
  # @param account_id Account ID
  # @param glossary_id Glossary ID
  # @param term_id Term ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [nil]
  describe 'glossary_term_translation_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for glossary_term_translation_update
  # Update a translation for a term
  # Update an existing translation for a term in a term base (previously: glossary).
  # @param account_id Account ID
  # @param glossary_id Glossary ID
  # @param term_id Term ID
  # @param id ID
  # @param glossary_term_translation_update_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [GlossaryTermTranslation]
  describe 'glossary_term_translation_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
