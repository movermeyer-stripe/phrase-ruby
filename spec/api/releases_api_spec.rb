require 'spec_helper'
require 'json'

# Unit tests for Phrase::ReleasesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ReleasesApi' do
  before do
    # run before each test
    @api_instance = Phrase::ReleasesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ReleasesApi' do
    it 'should create an instance of ReleasesApi' do
      expect(@api_instance).to be_instance_of(Phrase::ReleasesApi)
    end
  end

  # unit tests for release_create
  # Create a release
  # Create a new release.
  # @param account_id Account ID
  # @param distribution_id Distribution ID
  # @param release_create_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Release]
  describe 'release_create test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_delete
  # Delete a release
  # Delete an existing release.
  # @param account_id Account ID
  # @param distribution_id Distribution ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [nil]
  describe 'release_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_publish
  # Publish a release
  # Publish a release for production.
  # @param account_id Account ID
  # @param distribution_id Distribution ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Release]
  describe 'release_publish test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_show
  # Get a single release
  # Get details on a single release.
  # @param account_id Account ID
  # @param distribution_id Distribution ID
  # @param id ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Release]
  describe 'release_show test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for release_update
  # Update a release
  # Update an existing release.
  # @param account_id Account ID
  # @param distribution_id Distribution ID
  # @param id ID
  # @param release_update_parameters 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @return [Release]
  describe 'release_update test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for releases_list
  # List releases
  # List all releases for the given distribution.
  # @param account_id Account ID
  # @param distribution_id Distribution ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :x_phrase_app_otp Two-Factor-Authentication token (optional)
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :per_page Limit on the number of objects to be returned, between 1 and 100. 25 by default
  # @return [Array<ReleasePreview>]
  describe 'releases_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
